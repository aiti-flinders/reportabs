% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/str_format.R
\name{as_comma}
\alias{as_comma}
\title{Format a value as a pretty string, with comma separation}
\usage{
as_comma(string, group = NULL, value = NULL, suffix = NULL, ...)
}
\arguments{
\item{string}{Value to print}

\item{group}{A group over which to apply as_comma()}

\item{value}{The values to apply as_comma() to. Is NULL if group is NULL}

\item{suffix}{A string to print after the number}

\item{...}{Additional options passed to formatC}
}
\value{
character
}
\description{
Format a value as a pretty string, with comma separation
}
\examples{
Simple printing of a number: as_comma(1000) returns "1,000".
Large numbers are reported in millions: as_comma(1e6) returns "1 million"
Sometimes as_comma is applied where some values should be printed as "1 million" and some as "1,000". In these cases
a dataframe can be passed to string, provided the dataframe contains a column with a group identifier, and a column
with a value identifier which must be passed to as_comma().

}
